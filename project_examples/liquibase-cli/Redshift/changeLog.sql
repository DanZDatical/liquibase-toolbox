--liquibase formatted sql

--changeset SteveZ:45555-createTable_t1 context:DEV,UAT,t12 labels:Jira-166,feature1
CREATE TABLE t1(
  hist_id BIGINT IDENTITY NOT NULL,
  base_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  business_key varchar(10),
  some_field varchar(10) 
);
--rollback drop table t1;

--changeset SteveZ:45555-insertTable_t1 context:DEV,UAT,t12 labels:Jira-166,feature1
INSERT INTO T1 (business_key, some_field) values ('A','MM');
--rollback delete from T1 where business_key='A';

--changeset SteveZ:45555-rename_t1_to_t2 context:DEV,UAT,t12 labels:Jira-166,feature1
alter table t1
rename to t2;
--rollback alter table t2 rename to t1;

--changeset SteveZ:45555-create_proc_test_sp2 context:DEV,UAT,t12 labels:Jira-166,feature1 endDelimiter:/
CREATE OR REPLACE PROCEDURE test_sp2(f1 IN int, f2 INOUT varchar(256), out_var OUT varchar(256))
AS $$
DECLARE
  loop_var int;
BEGIN
  IF f1 is null OR f2 is null THEN
    RAISE EXCEPTION 'input cannot be null';
  END IF;
  DROP TABLE if exists my_etl;
  CREATE TEMP TABLE my_etl(a int, b varchar);
    FOR loop_var IN 1..f1 LOOP
        insert into my_etl values (loop_var, f2);
        f2 := f2 || '+' || f2;
    END LOOP;
  SELECT INTO out_var count(*) from my_etl;
END;
$$ LANGUAGE plpgsql;
/
--rollback drop PROCEDURE test_sp2(f1 IN int, f2 INOUT varchar(256), out_var OUT varchar(256));

