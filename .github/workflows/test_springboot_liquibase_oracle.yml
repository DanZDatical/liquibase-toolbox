# This workflow will build a Java Springboot project with Maven, for the following project example: https://github.com/liquibase/liquibase-toolbox/tree/master/project_examples/liquibase-springboot/springboot_liquibase_oracle 

name: Springboot CI with Maven and Spring Liquibase integration 

on:
  workflow_dispatch:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      oracle_dev:
        # Docker Hub image
        image: oracleinanutshell/oracle-xe-11g
        ports:
            - 49161:1521


    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: cd project_examples/liquibase-springboot/springboot_liquibase_oracle && mvn clean package -Dspring.datasource.url=jdbc:oracle:thin:@127.0.0.1:49161/xe -Dspring.datasource.username=system -Dspring.datasource.password=oracle -Dspring.liquibase.change-log=classpath:db/changelog/changelog_version-3.2.oracle.sql -Dserver.port=8086 -Duser.timezone=CST
      
    - uses: actions/upload-artifact@master
      with:
        name: my-artifact
        path: project_examples/liquibase-springboot/springboot_liquibase_oracle/target/SalesManager-0.0.1-SNAPSHOT.jar
